
- name: Generate the nagios conf.d directory
  file:
    path: /etc/nagios/conf.d
    state: directory

- name: Generate the nagios config templates
#  template: src={{ item + ".j2" }}
  template:
    src: "{{ item }}"
#    dest: "/etc/nagios/conf.d/{{ item }}"
    dest: "/etc/nagios/objects/"
    force: yes
  with_items:
    - "{{ playbook_dir}}/roles/nagios/configs/hosts.cfg"
    - "{{ playbook_dir}}/roles/nagios/configs/services.cfg"
    - "{{ playbook_dir}}/roles/nagios/configs/hostgroups.cfg"
    - "{{ playbook_dir}}/roles/nagios/configs/escalations.cfg"
    - "{{ playbook_dir}}/roles/nagios/configs/contacts.cfg"
    - "{{ playbook_dir}}/roles/nagios/configs/commands.cfg"


- name: Generate the nagios monitoring templates
#  template: src={{ item + ".j2" }}
  template:
    src: "{{ item }}"
#    dest: "/etc/nagios/conf.d/{{ item }}"
    dest: "/etc/nagios/conf.d/"
    force: yes
  with_items:
    - "{{ playbook_dir}}/roles/nagios/configs/*.cfg"

#- name: Generate the nagios monitoring templates
#  template: src={{ item + ".j2" }}
#  template:
#    src: "{{ item }}"
#    dest: "/etc/nagios/conf.d/{{ item }}"
#    force: yes
#  with_items:
#    - sheep.cfg.j2
#    - "*.j2"
#    - "{{ playbook_dir}}/roles/nagios/templates/*.j2"
#    - oobservers.cfg.j2
#    - switches.cfg.j2
#    - webservers.cfg.j2
#    - servers.cfg.j2
#    - servers_with_mdadm_raid.cfg.j2
#    - commands.cfg.j2
#    - elkservers.cfg.j2
#    - elasticsearch.cfg.j2
#    - idrac.cfg.j2
#    - supermicro_6018r.cfg.j2
#    - supermicro_6048r.cfg.j2
#    - supermicro_1028r.cfg.j2
#    - jenkins.cfg.j2
#    - dns.cfg.j2
#    - dns_with_mdadm_raid.cfg.j2
#    - freenas.cfg.j2
#    - devices.cfg.j2
  register: nagios_needs_restart
  become: true

- name: Generate the nagios contact template and localhost config
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/objects/{{ item }}
            force=yes
  with_items:
    - contacts.cfg
    - localhost.cfg
  become: true

- name: Generate the nagios user CGI template
  template: src={{ item + ".j2" }}
            dest=/etc/nagios/{{ item }}
  with_items:
    - cgi.cfg
    - services.cfg
  become: true

- name: Start nagios service
  command: systemctl restart nagios.service
  when: nagios_needs_restart != 0
  become: true

- name: Set nagios to start on boot
  command: systemctl enable nagios.service
  ignore_errors: true
  become: true

- name: Setup HTTPD service
  command: systemctl enable httpd.service
  ignore_errors: true
  when: nagios_needs_restart !=0
  become: true

- name: Restart HTTPD service
  command: systemctl restart httpd.service
  ignore_errors: true
  when: nagios_needs_restart !=0
  become: true
